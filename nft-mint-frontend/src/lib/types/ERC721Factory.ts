/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../common";

export declare namespace ERC721Factory {
  export type TokenMetadataStruct = {
    tokenAddress: AddressLike;
    name: string;
    symbol: string;
    description: string;
    owner: AddressLike;
  };

  export type TokenMetadataStructOutput = [
    tokenAddress: string,
    name: string,
    symbol: string,
    description: string,
    owner: string
  ] & {
    tokenAddress: string;
    name: string;
    symbol: string;
    description: string;
    owner: string;
  };
}

export interface ERC721FactoryInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "createToken"
      | "deployedTokens"
      | "getDeployedTokens"
      | "mintToken"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "createToken",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "deployedTokens",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDeployedTokens",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "mintToken",
    values: [BigNumberish, AddressLike, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "createToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deployedTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDeployedTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mintToken", data: BytesLike): Result;
}

export interface ERC721Factory extends BaseContract {
  connect(runner?: ContractRunner | null): ERC721Factory;
  waitForDeployment(): Promise<this>;

  interface: ERC721FactoryInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  createToken: TypedContractMethod<
    [_name: string, _symbol: string, _description: string],
    [void],
    "nonpayable"
  >;

  deployedTokens: TypedContractMethod<
    [arg0: BigNumberish],
    [
      [string, string, string, string, string] & {
        tokenAddress: string;
        name: string;
        symbol: string;
        description: string;
        owner: string;
      }
    ],
    "view"
  >;

  getDeployedTokens: TypedContractMethod<
    [],
    [ERC721Factory.TokenMetadataStructOutput[]],
    "view"
  >;

  mintToken: TypedContractMethod<
    [index: BigNumberish, to: AddressLike, uri: string],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "createToken"
  ): TypedContractMethod<
    [_name: string, _symbol: string, _description: string],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "deployedTokens"
  ): TypedContractMethod<
    [arg0: BigNumberish],
    [
      [string, string, string, string, string] & {
        tokenAddress: string;
        name: string;
        symbol: string;
        description: string;
        owner: string;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "getDeployedTokens"
  ): TypedContractMethod<
    [],
    [ERC721Factory.TokenMetadataStructOutput[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "mintToken"
  ): TypedContractMethod<
    [index: BigNumberish, to: AddressLike, uri: string],
    [void],
    "nonpayable"
  >;

  filters: {};
}
